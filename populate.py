import os
import sys
import django
from decimal import Decimal
from random import choice, randint, uniform

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'provesi.settings')  # OJO proyecto
django.setup()

# Importar modelos
from pedidos.models import Producto, Pedido  # Cambia por tu app

def generar_productos_provesi():
    """Generar productos de Provesi - EPP y Seguridad Industrial"""
    
    # Productos por marcas que distribuye Provesi
    productos_3m = [
        "Mascarilla 3M 8210", "Respirador 3M 6200", "Casco 3M H-700", "Tapones 3M 1100",
        "Gafas 3M SecureFit", "Guantes 3M Comfort Grip", "Protector Auditivo 3M Peltor",
        "Filtro 3M 6001", "Mascarilla 3M 9210", "Arn√©s 3M DBI-SALA"
    ]
    
    productos_steelpro = [
        "Casco Steelpro Linesman", "Botas Steelpro Diel√©ctrica", "Guantes Steelpro Soldador",
        "Chaleco Steelpro Reflectivo", "Gafas Steelpro Clear", "Overol Steelpro Antifluido"
    ]
    
    productos_kimberly = [
        "Guantes Kimberly Nitrilo", "Bata Kimberly SMS", "Respirador Kimberly N95",
        "Toalla Industrial Kimberly", "Papel Higi√©nico Kimberly"
    ]
    
    productos_ansell = [
        "Guantes Ansell PowerFlex", "Guantes Ansell HyFlex", "Guantes Ansell TouchNTuff",
        "Guantes Ansell AlphaTec", "Guantes Ansell Versatouch"
    ]
    
    productos_croydon = [
        "Botas Croydon Diel√©ctrica", "Botas Croydon Punta Acero", "Botas Croydon Antideslizante",
        "Botas Croydon Impermeable"
    ]
    
    productos_generales = [
        # EPP General
        "Casco de Seguridad Blanco", "Casco de Seguridad Amarillo", "Casco de Seguridad Rojo",
        "Chaleco Reflectivo Amarillo", "Chaleco Reflectivo Naranja", "Arn√©s Cuerpo Completo",
        "L√≠nea de Vida", "Mosquet√≥n Acero", "Eslinga Poli√©ster", "Cuerda Est√°tica",
        
        # Protecci√≥n Respiratoria
        "Mascarilla Quir√∫rgica", "Respirador N95", "Filtro P100", "Media Cara Silicona",
        "Cara Completa Respirador", "Cartucho Qu√≠mico", "Pre-filtro Algod√≥n",
        
        # Protecci√≥n Visual
        "Gafas Seguridad Transparente", "Gafas Seguridad Oscura", "Gafas Panor√°micas",
        "Pantalla Facial", "Monogafas", "Protector Facial Policarbonato",
        
        # Protecci√≥n Auditiva
        "Tapones Espuma", "Tapones Silicona", "Protector Copa", "Protector Inserci√≥n",
        
        # Calzado Seguridad
        "Botas Punta Acero Negro", "Botas Punta Acero Caf√©", "Zapatos Seguridad",
        "Plantilla Acero", "Plantilla Kevlar", "Calcetines Trabajo",
        
        # Protecci√≥n Manos
        "Guantes Carnaza", "Guantes Nitrilo", "Guantes L√°tex", "Guantes PVC",
        "Guantes Anticorte", "Guantes Soldador", "Guantes Qu√≠micos", "Guantes T√©rmicos",
        
        # Ropa de Trabajo
        "Overol Industrial", "Camisa Drill", "Pantal√≥n Drill", "Delantal PVC",
        "Delantal Carnaza", "Bata Laboratorio", "Uniforme M√©dico", "Pijama Quir√∫rgica",
        
        # Herramientas
        "Martillo Garra", "Destornillador Plano", "Destornillador Phillips", "Alicate Universal",
        "Llave Inglesa", "Metro Met√°lico", "Nivel Burbuja", "Taladro El√©ctrico",
        "Sierra Manual", "Lima Met√°lica", "Berbiqu√≠", "Form√≥n",
        
        # Equipos Computo
        "Laptop HP", "Desktop Dell", "Monitor Samsung 24", "Teclado Logitech",
        "Mouse Inal√°mbrico", "Impresora HP", "Router WiFi", "Switch 8 Puertos",
        "Disco Duro Externo", "Memoria USB 32GB", "Cable HDMI", "Webcam HD",
        
        # Electrodom√©sticos
        "Nevera 250L", "Lavadora 15Kg", "Microondas 1.2Cu", "Licuadora Industrial",
        "Cafetera 12 Tazas", "Plancha Vapor", "Ventilador Techo", "Aire Acondicionado",
        
        # Bioseguridad
        "Gel Antibacterial", "Alcohol Glicerinado", "Term√≥metro Digital", "Dispensador Gel",
        "Tapete Desinfectante", "Atomizador Manual", "Desinfectante Superficies",
        
        # Se√±alizaci√≥n
        "Se√±al Prohibido Fumar", "Se√±al Uso Obligatorio Casco", "Se√±al Salida Emergencia",
        "Cinta Peligro", "Conos Tr√°fico", "Valla Peatonal", "Extintor 10Lb"
    ]
    
    # Combinar todos los productos
    todos_productos = (productos_3m + productos_steelpro + productos_kimberly + 
                      productos_ansell + productos_croydon + productos_generales)
    
    productos_lista = []
    
    for nombre in todos_productos:
        precio = uniform(5000, 500000)  # Precios en pesos colombianos
        stock = randint(10, 1000)
        
        productos_lista.append(Producto(
            nombre=nombre,
            precio=Decimal(str(round(precio, 2))),
            stock=stock
        ))
    
    return productos_lista

def crear_pedidos_bulk(productos, cantidad_pedidos=5000):
    """Crear 5000 pedidos de forma eficiente"""
    
    nombres_clientes = [
        # Empresas colombianas t√≠picas
        "Ecopetrol S.A.", "Grupo Nutresa", "Bancolombia", "Grupo √âxito", "ISA",
        "Cemex Colombia", "Bavaria S.A.", "Alpina", "Colpatria", "Avianca",
        "Mineros S.A.", "Cementos Argos", "EPM", "Gas Natural", "Claro Colombia",
        
        # Personas naturales
        "Carlos Rodr√≠guez", "Mar√≠a Garc√≠a", "Juan L√≥pez", "Ana Mart√≠nez", "Luis Hern√°ndez",
        "Carmen D√≠az", "Jos√© Gonz√°lez", "Laura P√©rez", "Diego Ram√≠rez", "Patricia Torres",
        "Fernando Ruiz", "Claudia Vargas", "Andr√©s Moreno", "Isabel Castro", "Roberto Silva",
        "M√≥nica Jim√©nez", "Pablo Guerrero", "Beatriz Mendoza", "Sergio Ortega", "Natalia Rojas",
        "√ìscar Delgado", "Cristina Vega", "Javier Flores", "Luc√≠a Herrera", "Manuel Aguilar",
        "Raquel Navarro", "Alberto S√°nchez", "Silvia Romero", "Eduardo Molina", "Paola Cruz"
    ]
    
    pedidos_lista = []
    estados = ['pendiente', 'despachado']
    
    print(f"Creando {cantidad_pedidos} pedidos...")
    
    for i in range(cantidad_pedidos):
        pedido = Pedido(
            cliente=choice(nombres_clientes),
            producto=choice(productos),
            cantidad=randint(1, 50),
            estado=choice(estados)
        )
        pedidos_lista.append(pedido)
        
        if (i + 1) % 1000 == 0:
            print(f"Generados {i + 1} pedidos...")
    
    return pedidos_lista

def main():
    print("üè≠ PROVESI COLOMBIA - POBLANDO BASE DE DATOS")
    print("=" * 50)
    
    # Crear productos
    print("üì¶ Generando productos de EPP y Seguridad Industrial...")
    productos_lista = generar_productos_provesi()
    
    # Borrar productos existentes (opcional)
    # Producto.objects.all().delete()
    # Pedido.objects.all().delete()
    
    # Crear productos en bulk
    productos_creados = Producto.objects.bulk_create(productos_lista, ignore_conflicts=True)
    print(f"‚úÖ {len(productos_creados)} productos creados")
    
    # Obtener todos los productos para crear pedidos
    todos_productos = list(Producto.objects.all())
    
    if not todos_productos:
        print("‚ùå No hay productos disponibles para crear pedidos")
        return
    
    # Crear pedidos en bulk
    print("üìã Generando 5000 pedidos...")
    pedidos_lista = crear_pedidos_bulk(todos_productos, 5000)
    
    # Crear pedidos en lotes para evitar problemas de memoria
    batch_size = 500
    total_creados = 0
    
    for i in range(0, len(pedidos_lista), batch_size):
        batch = pedidos_lista[i:i + batch_size]
        Pedido.objects.bulk_create(batch)
        total_creados += len(batch)
        print(f"üìä Creados {total_creados}/{len(pedidos_lista)} pedidos...")
    
    print("=" * 50)
    print("‚úÖ ¬°BASE DE DATOS POBLADA EXITOSAMENTE!")
    print(f"üì¶ Productos totales: {Producto.objects.count()}")
    print(f"üìã Pedidos totales: {Pedido.objects.count()}")
    print("üá®üá¥ Provesi Colombia - EPP y Seguridad Industrial")

if __name__ == "__main__":
    main()	